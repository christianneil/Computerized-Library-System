/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package library.management.newn;
import javax.swing.JFrame;

/**
 *
 * @author opall
 */
public class neil extends javax.swing.JFrame {
 
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    /**
     * Creates new form neil
     */
    public neil() {
        initComponents();
       // setExtendedState(Jframe.MAXIMIZED_BOTH);
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel7 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txt_author = new javax.swing.JTextField();
        txt_booktitle = new javax.swing.JTextField();
        txt_category = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jComboBox_statusBook = new javax.swing.JComboBox<>();
        crud_addBtn = new rojerusan.RSMaterialButtonRectangle();
        crud_updateBtn = new rojerusan.RSMaterialButtonRectangle();
        crud_deleteBtn = new rojerusan.RSMaterialButtonRectangle();
        jScrollPane2 = new javax.swing.JScrollPane();
        crud_tableDataOfBooks = new rojerusan.RSTableMetro();
        jLabel21 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        txt_quantity = new javax.swing.JTextField();
        txt_publisher = new javax.swing.JTextField();
        crud_clearBtn = new rojerusan.RSMaterialButtonRectangle();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(144, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(144, 0, 0));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/management/newn/iconsforLibrarianSideMenu/icons8-categorize-24.png"))); // NOI18N
        jLabel13.setText(" Categories");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 140, 30));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, 250, 30));

        jPanel12.setBackground(new java.awt.Color(144, 0, 0));

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/management/newn/iconsforLibrarianSideMenu/icons8-books-24.png"))); // NOI18N
        jLabel17.setText(" List of Issued Books");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel17)
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 250, 40));

        jPanel13.setBackground(new java.awt.Color(144, 0, 0));
        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText(" Book Transaction ");
        jPanel13.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/management/newn/iconsforLibrarianSideMenu/icons8-transaction-24.png"))); // NOI18N
        jLabel1.setText(" Book Transaction ");
        jPanel13.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, -1, 30));

        jPanel1.add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 230, 250, 30));

        jPanel16.setBackground(new java.awt.Color(144, 0, 0));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/management/newn/iconsforLibrarianSideMenu/icons8-dashboard-24.png"))); // NOI18N
        jLabel2.setText(" Dashboard");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addGap(0, 7, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.add(jPanel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 250, 40));

        jButton1.setText("LOG OUT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 650, 110, 40));

        jPanel5.setBackground(new java.awt.Color(144, 0, 0));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 240, -1));

        jPanel6.setBackground(new java.awt.Color(144, 0, 0));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/management/newn/iconsforLibrarianSideMenu/icons8-add-book-24.png"))); // NOI18N
        jLabel14.setText(" Book Maintenance ");
        jPanel6.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, -1, 30));

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 350, 250, 30));

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 140, 10));

        jPanel7.setBackground(new java.awt.Color(144, 0, 0));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/management/newn/iconsforLibrarianSideMenu/icons8-user-groups-24.png"))); // NOI18N
        jLabel10.setText(" Member Maintenance ");
        jPanel7.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, -1, 30));

        jPanel1.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 250, 30));

        jLabel20.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/management/newn/iconsforLibrarianSideMenu/icons8-librarian-64.png"))); // NOI18N
        jLabel20.setText("LIBRARIAN");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 200, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 250, 770));

        jPanel2.setBackground(new java.awt.Color(144, 0, 0));
        jPanel2.setPreferredSize(new java.awt.Dimension(494, 33));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel19.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Welcome :");
        jPanel2.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 30, 230, 20));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(242, 242, 242));
        jLabel3.setText("Dashboard");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 140, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(249, 0, 1120, 50));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setBackground(new java.awt.Color(241, 184, 20));
        jLabel12.setFont(new java.awt.Font("Nirmala UI", 0, 16)); // NOI18N
        jLabel12.setText("Status");
        jPanel11.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, -1, 31));

        txt_author.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txt_author.setSelectionStart(2);
        txt_author.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_authorActionPerformed(evt);
            }
        });
        jPanel11.add(txt_author, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 330, 30));

        txt_booktitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txt_booktitle.setSelectionStart(2);
        txt_booktitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_booktitleActionPerformed(evt);
            }
        });
        jPanel11.add(txt_booktitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 330, 30));

        txt_category.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txt_category.setSelectionStart(2);
        txt_category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_categoryActionPerformed(evt);
            }
        });
        jPanel11.add(txt_category, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 330, 30));

        jLabel15.setBackground(new java.awt.Color(241, 184, 20));
        jLabel15.setFont(new java.awt.Font("Nirmala UI", 0, 16)); // NOI18N
        jLabel15.setText("Book Title");
        jPanel11.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, 31));

        jLabel16.setBackground(new java.awt.Color(241, 184, 20));
        jLabel16.setFont(new java.awt.Font("Nirmala UI", 0, 16)); // NOI18N
        jLabel16.setText("Author");
        jPanel11.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, 20));

        jLabel18.setBackground(new java.awt.Color(241, 184, 20));
        jLabel18.setFont(new java.awt.Font("Nirmala UI", 0, 16)); // NOI18N
        jLabel18.setText("Publisher");
        jPanel11.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, 20));

        jComboBox_statusBook.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "Not Available" }));
        jComboBox_statusBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_statusBookActionPerformed(evt);
            }
        });
        jPanel11.add(jComboBox_statusBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 440, 310, 40));

        crud_addBtn.setBackground(new java.awt.Color(0, 0, 144));
        crud_addBtn.setText("add");
        crud_addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crud_addBtnActionPerformed(evt);
            }
        });
        jPanel11.add(crud_addBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 490, 310, 40));

        crud_updateBtn.setBackground(new java.awt.Color(0, 0, 144));
        crud_updateBtn.setText("UPDATE");
        crud_updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crud_updateBtnActionPerformed(evt);
            }
        });
        jPanel11.add(crud_updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 500, 310, 40));

        crud_deleteBtn.setBackground(new java.awt.Color(0, 0, 144));
        crud_deleteBtn.setText("DELETE");
        crud_deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crud_deleteBtnActionPerformed(evt);
            }
        });
        jPanel11.add(crud_deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 540, 310, 40));

        crud_tableDataOfBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Book Title", "Author", "Publisher", "Category", "Quantity", "Status"
            }
        ));
        crud_tableDataOfBooks.setColorBackgoundHead(new java.awt.Color(241, 184, 20));
        crud_tableDataOfBooks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                crud_tableDataOfBooksMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(crud_tableDataOfBooks);

        jPanel11.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 30, 630, 450));

        jLabel21.setBackground(new java.awt.Color(241, 184, 20));
        jLabel21.setFont(new java.awt.Font("Nirmala UI", 0, 16)); // NOI18N
        jLabel21.setText("Quantity");
        jPanel11.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, -1, -1));

        jLabel23.setBackground(new java.awt.Color(241, 184, 20));
        jLabel23.setFont(new java.awt.Font("Nirmala UI", 0, 16)); // NOI18N
        jLabel23.setText("Category");
        jPanel11.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, -1, 20));

        txt_quantity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txt_quantity.setSelectionStart(2);
        txt_quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_quantityActionPerformed(evt);
            }
        });
        jPanel11.add(txt_quantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 370, 330, 30));

        txt_publisher.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txt_publisher.setSelectionStart(2);
        txt_publisher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_publisherActionPerformed(evt);
            }
        });
        jPanel11.add(txt_publisher, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 330, 30));

        crud_clearBtn.setBackground(new java.awt.Color(0, 0, 144));
        crud_clearBtn.setText("CLEAR");
        crud_clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crud_clearBtnActionPerformed(evt);
            }
        });
        jPanel11.add(crud_clearBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 540, 310, 40));

        jPanel8.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 50, 1120, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_authorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_authorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_authorActionPerformed

    private void txt_booktitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_booktitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_booktitleActionPerformed

    private void txt_categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_categoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_categoryActionPerformed

    private void jComboBox_statusBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_statusBookActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_statusBookActionPerformed

    private void crud_addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crud_addBtnActionPerformed
        // Display the current book data in the JTable
        showBookDataToTable();

        // SQL statement to get the maximum book ID from the book_details table
        String getMaxId = "SELECT MAX(book_id) FROM book_details";
        // SQL statement to insert book data into the book_details table
        String insertData = "INSERT INTO book_details (book_id, book_title, author, publisher, category, quantity, status) VALUES (?,?,?,?,?,?,?)";

        // Get a connection to the database
        con = Connectionz.getConnection();

        try {
            // Check if all necessary fields have been filled out, otherwise show an error message
            if (txt_booktitle.getText().isEmpty() || txt_author.getText().isEmpty() || txt_publisher.getText().isEmpty() || txt_category.getText().isEmpty() || txt_quantity.getText().isEmpty() || jComboBox_statusBook.getSelectedItem() == null) {
                if (!txt_booktitle.hasFocus() || !txt_author.hasFocus() || !txt_publisher.hasFocus() || !txt_category.hasFocus() || !txt_quantity.hasFocus() || !jComboBox_statusBook.hasFocus()) {
                    JOptionPane.showMessageDialog(this, "Please fill out all necessary information", "Error Message", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                // Validate if the input for quantity is a number
                int quantity = 0;
                try {
                    quantity = Integer.parseInt(txt_quantity.getText());
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(this, "Quantity must be a number", "Error Message", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                // Get the maximum book ID from the database and increment it by 1 to generate a new, unique ID for the book being added
                pst = con.prepareStatement(getMaxId);
                ResultSet rs = pst.executeQuery();
                int maxId = rs.next() ? rs.getInt(1) : 0; // If there are no existing book IDs, use the default value of 0 as the maximum
                int newId = maxId + 1;

                // Insert the book data into the book_details table
                pst = con.prepareStatement(insertData);
                pst.setInt(1, newId);
                pst.setString(2, txt_booktitle.getText());
                pst.setString(3, txt_author.getText());
                pst.setString(4, txt_publisher.getText());
                pst.setString(5, txt_category.getText());
                pst.setString(6, txt_quantity.getText());
                pst.setString(7, (String) jComboBox_statusBook.getSelectedItem());
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Successfully Added", "Information Message", JOptionPane.INFORMATION_MESSAGE);

                // Update the JTable to show the newly added book data
                showBookDataToTable();

                // CLEAR FIELDS
                clearFields();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_crud_addBtnActionPerformed

    private void crud_updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crud_updateBtnActionPerformed
        // When the Update button is clicked, prepare the SQL statement with the new data
        String updateData = "UPDATE book_details SET book_title='"
        + txt_booktitle.getText() + "', author='"
        + txt_author.getText() + "', publisher='"
        + txt_publisher.getText() + "', category='"
        + txt_category.getText() + "', quantity='"
        + txt_quantity.getText() + "', status='"
        + jComboBox_statusBook.getSelectedItem() + "' WHERE book_id=" + idN;

        con = Connectionz.getConnection();

        try {
            // Check if all necessary fields are filled
            if (txt_booktitle.getText().isEmpty() || txt_author.getText().isEmpty() || txt_publisher.getText().isEmpty() || txt_category.getText().isEmpty() || txt_quantity.getText().isEmpty() || jComboBox_statusBook.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(this, "Please select a row first", "Error Message", JOptionPane.ERROR_MESSAGE);
            } else {
                // Check if quantity is a number
                String quantityStr = txt_quantity.getText().trim();
                if (!quantityStr.matches("\\d+")) {
                    JOptionPane.showMessageDialog(this, "Quantity must be a number", "Error Message", JOptionPane.ERROR_MESSAGE);
                } else {
                    // Confirm with user if they want to update data
                    int option = JOptionPane.showConfirmDialog(this, "Are you sure you want to UPDATE? ", "Confirmation Message", JOptionPane.YES_OPTION, JOptionPane.QUESTION_MESSAGE);

                    if (option == JOptionPane.YES_OPTION) {
                        pst = con.prepareStatement(updateData);
                        pst.executeUpdate();

                        JOptionPane.showMessageDialog(this, "Successfully Added", "Information Message", JOptionPane.INFORMATION_MESSAGE);

                        //TO SHOW UPDATED DATA
                        showBookDataToTable();

                        //CLEAR FIELDS
                        clearFields();
                    } else {
                        JOptionPane.showMessageDialog(this, "Cancelled update!", "Information Message", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_crud_updateBtnActionPerformed

    private void crud_deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crud_deleteBtnActionPerformed
        // SQL command to delete the book data with the corresponding id number
        String deleteData = "DELETE FROM book_details WHERE book_id=" + String.valueOf(idN);
        // SQL command to update the book id numbers for the remaining records
        String updateIds = "UPDATE book_details SET book_id = book_id - 1 WHERE book_id > ?";

        try {
            if (txt_booktitle.getText().isEmpty() || txt_author.getText().isEmpty() || txt_publisher.getText().isEmpty() || txt_category.getText().isEmpty() || txt_quantity.getText().isEmpty() || jComboBox_statusBook.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(this, "Please select a row first", "Error Message", JOptionPane.ERROR_MESSAGE);
            } else {
                int option = JOptionPane.showConfirmDialog(this, "Are you sure you want to DELETE? ", "Confirmation Message", JOptionPane.YES_OPTION, JOptionPane.QUESTION_MESSAGE);

                if (option == JOptionPane.YES_OPTION) {
                    con = Connectionz.getConnection();
                    pst = con.prepareStatement(deleteData);
                    pst.executeUpdate();
                    pst.close();

                    pst = con.prepareStatement(updateIds);
                    pst.setInt(1, idN);
                    pst.executeUpdate();
                    pst.close();

                    JOptionPane.showMessageDialog(this, "Successfully Deleted", "Information Message", JOptionPane.INFORMATION_MESSAGE);

                    //TO SHOW UPDATED DATA
                    showBookDataToTable();

                    //CLEAR FIELDS
                    clearFields();
                } else {
                    JOptionPane.showMessageDialog(this, "Cancelled deletion!", "Information Message", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            // This block of code is executed regardless of whether an exception was thrown or not.
            // It is used to ensure that database resources (in this case, the PreparedStatement and Connection objects) are properly closed.
            try {
                // Check if the PreparedStatement object is not null
                if (pst != null) {
                    // If it's not null, close it to release any database resources it may be holding
                    pst.close();
                }
                // Check if the Connection object is not null
                if (con != null) {
                    // If it's not null, close it to release any database resources it may be holding
                    con.close();
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_crud_deleteBtnActionPerformed

    private void crud_tableDataOfBooksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_crud_tableDataOfBooksMouseClicked
        DefaultTableModel model = (DefaultTableModel) crud_tableDataOfBooks.getModel();
        int index = crud_tableDataOfBooks.getSelectedRow();

        // Get the ID of the selected book
        idN = Integer.valueOf(model.getValueAt(index, 0).toString());

        txt_booktitle.setText(model.getValueAt(index, 1).toString());
        txt_author.setText(model.getValueAt(index, 2).toString());
        txt_publisher.setText(model.getValueAt(index, 3).toString());
        txt_category.setText(model.getValueAt(index, 4).toString());
        txt_quantity.setText(model.getValueAt(index, 5).toString());
        jComboBox_statusBook.setSelectedItem(model.getValueAt(index, 6).toString());
    }//GEN-LAST:event_crud_tableDataOfBooksMouseClicked

    private void txt_quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_quantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_quantityActionPerformed

    private void txt_publisherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_publisherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_publisherActionPerformed

    private void crud_clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crud_clearBtnActionPerformed
        clearFields();
    }//GEN-LAST:event_crud_clearBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(neil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(neil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(neil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(neil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new neil().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojerusan.RSMaterialButtonRectangle crud_addBtn;
    private rojerusan.RSMaterialButtonRectangle crud_clearBtn;
    private rojerusan.RSMaterialButtonRectangle crud_deleteBtn;
    private rojerusan.RSTableMetro crud_tableDataOfBooks;
    private rojerusan.RSMaterialButtonRectangle crud_updateBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox_statusBook;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField txt_author;
    private javax.swing.JTextField txt_booktitle;
    private javax.swing.JTextField txt_category;
    private javax.swing.JTextField txt_publisher;
    private javax.swing.JTextField txt_quantity;
    // End of variables declaration//GEN-END:variables
}
